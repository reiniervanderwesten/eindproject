// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Host {
  id          String     @id @default(uuid())
  username    String     @unique
  password    String
  name        String
  email       String
  phoneNumber String
  pictureUrl  String
  aboutMe     String
  listings    Property[]
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  password    String
  name        String
  email       String
  phoneNumber String
  pictureUrl  String
  reviews     Review[]
  bookings    Booking[]
}

model Property {
  id            String    @id @default(uuid())
  gastheerId    String
  title         String
  description   String
  location      String
  pricePerNight Float
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int
  reviews       Review[]
  bookings      Booking[]
  hostId        Host      @relation(fields: [gastheerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index(gastheerId)
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String
  gebruikerId    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  eigendomId     Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index(userId)
  @@index(propertyId)
}

model Review {
  id          String   @id @default(uuid())
  userId      String
  propertyId  String
  rating      Int
  comment     String
  gebruikerId User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  eigendomId  Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index(userId)
  @@index(propertyId)
}
